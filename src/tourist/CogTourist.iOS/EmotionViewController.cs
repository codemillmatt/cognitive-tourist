// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using CogTourist.Core;
using System.Threading.Tasks;
using System.IO;
using System.Collections.Generic;
using CoreAnimation;
using CoreGraphics;

namespace CogTourist
{
    public partial class EmotionViewController : UIViewController
    {
        EmotionService emotionService;
        PhotoService photoService;

        public EmotionViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            askForHelp.Hidden = true;

            emotionService = new EmotionService();
            photoService = new PhotoService();

            Title = "Emotion";
            var photoPrompt = UIAlertController.Create("Emotion", "Pick or take a photo", UIAlertControllerStyle.ActionSheet);

            var useCamera = UIAlertAction.Create("Take Photo", UIAlertActionStyle.Default, async (obj) => await HandleCamera(true));
            var pickPhoto = UIAlertAction.Create("Pick Photo", UIAlertActionStyle.Default, async (obj) => await HandleCamera(false));
            var cancelAction = UIAlertAction.Create("Cancel", UIAlertActionStyle.Cancel, null);

            photoPrompt.AddAction(pickPhoto);
            photoPrompt.AddAction(useCamera);
            photoPrompt.AddAction(cancelAction);

            takePhoto.TouchUpInside += (sender, e) =>
            {
                askForHelp.Hidden = true;
                PresentViewController(photoPrompt, true, null);
            };

        }

        async Task HandleCamera(bool shouldTakePhoto)
        {
            Stream photoStream;

            if (shouldTakePhoto)
                photoStream = (await photoService.TakePhoto()).GetStream();
            else
                photoStream = await photoService.PickPhoto();


            var oldImage = new UIImage(NSData.FromStream(photoStream));
            personPhoto.Image = oldImage;

            var allRecognizedEmotions = await emotionService.RecognizeEmotions(photoStream);

            DrawEmotionsOnImage(oldImage, allRecognizedEmotions);

            askForHelp.Hidden = false;
        }

        void DrawEmotionsOnImage(UIImage theImage, List<Emotion> allEmotions)
        {
            if (allEmotions == null)
                return;

            UIGraphics.BeginImageContext(theImage.Size);

            theImage.Draw(new CGPoint(0, 0));

            var ctx = UIGraphics.GetCurrentContext();

            ctx.SetLineWidth(10);

            foreach (var emotion in allEmotions)
            {
                var emotionColor = GetColorBasedOnEmotion(emotion.GetMainEmotion());
                ctx.SetStrokeColor(emotionColor);

                var right = (nfloat)(emotion.FaceRectangle.Left + emotion.FaceRectangle.Width);
                var bottom = (nfloat)(emotion.FaceRectangle.Top + emotion.FaceRectangle.Height);

                var left = (nfloat)emotion.FaceRectangle.Left;
                var top = (nfloat)emotion.FaceRectangle.Top;

                var factRect = CGRect.FromLTRB(left, top, right, bottom);

                ctx.StrokeRect(factRect);
            }

            var newImage = UIGraphics.GetImageFromCurrentImageContext();

            UIGraphics.EndImageContext();

            personPhoto.Image = newImage;
        }

        CGColor GetColorBasedOnEmotion(string emotion)
        {
            switch (emotion.ToLower())
            {
                case "angry":
                    return UIColor.Red.CGColor;
                case "contempt":
                    return UIColor.FromRGB(165, 111, 88).CGColor;
                case "disgusted":
                    return UIColor.FromRGB(144, 181, 83).CGColor;
                case "afraid":
                    return UIColor.FromRGB(59, 116, 163).CGColor;
                case "happy":
                    return UIColor.FromRGB(29, 191, 4).CGColor;
                case "sad":
                    return UIColor.FromRGB(146, 79, 224).CGColor;
                case "surprised":
                    return UIColor.FromRGB(255, 13, 255).CGColor;
                default:
                    return UIColor.Orange.CGColor;
            }
        }
    }
}
